{
  "version": "0.3.0",
  "devDependencies": {
    "@types/express": "^5.0.0",
    "dts-bundle-generator": "^8.0.1",
    "esbuild": "^0.18.17",
    "typescript": "^5.6.3"
  },
  "scripts": {
    "build": "npx tsc",
    "build:watch": "npx tsc -w",
    "build:full": "npx tsc && node build.js && cp dist/*.com.js ..",
    "build:server": "npx tsc && node build-server.js && cp dist/server-app.js .",
    "build:fuller": "npx tsc && node build.js && npx dts-bundle-generator -o dist/mykronos.com.d.ts src/mykronos.com.ts && cp dist/mykronos.com.js ../mykronos.com.js",
    "build:full:watch": "npm run build:watch & watch -n 1 npm run build:full && echo 'done'",
    "bfw": "npm run build:full:watch",
    "pub:major": "npm version major && npm run publish",
    "pub:minor": "npm version minor && npm run publish",
    "pub:patch": "npm version patch && npm run publish",
    "publish": "if [ -f dist/mykronos.com/mykronos.com-$(cat package.json | jq -r '.version').js ]; then echo $(cat package.json | jq -r '.version') 'Already published!'; exit 1; fi; npm run build:fuller && cp ../mykronos.com.js dist/mykronos.com/mykronos.com-$(cat package.json | jq -r '.version').js && s3cdn ../mykronos.com.js mykronos.com/mykronos.com-$(cat package.json | jq -r '.version').js && s3cdn ../mykronos.com.js mykronos.com/mykronos.com-latest.js && s3cdn ../mykronos.com.js mykronos.com.js && git tag v$(cat package.json | jq -r '.version') && git push --tags",
    "server": "node --env-file=./.env server-app.js"
  },
  "dependencies": {
    "@types/node": "^22.8.6",
    "date-fns": "^2.30.0",
    "express": "^4.21.1",
    "tsc": "^2.0.4"
  }
}
