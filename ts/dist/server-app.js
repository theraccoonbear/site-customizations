"use strict";var b=Object.create;var j=Object.defineProperty;var q=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var P=(e,n,s,o)=>{if(n&&typeof n=="object"||typeof n=="function")for(let t of v(n))!_.call(e,t)&&t!==s&&j(e,t,{get:()=>n[t],enumerable:!(o=q(n,t))||o.enumerable});return e};var R=(e,n,s)=>(s=e!=null?b(I(e)):{},P(n||!e||!e.__esModule?j(s,"default",{value:e,enumerable:!0}):s,e));var x=R(require("express")),$=R(require("fs")),r=R(require("path")),w=$.default.promises,F=(0,x.default)(),h=process.env.PORT||3e3,a=process.env.BASE_DIRECTORY||r.default.join(__dirname,"files"),T=/[^A-Z0-9_-]/i,d=/^\/\/\s+@include\s+(([A-Z0-9_-]+\.)+js)/gim;console.info(`BASE_DIRECTORY="${a}"`);var c=async e=>{try{return(await w.stat(e)).isFile()}catch{return!1}},y=async e=>{if(d.test(e)){d.lastIndex=0;let n=d.exec(e);if(n){let s=n[1],o=r.default.join(a,s);if(await c(o)){console.log(`Expanding to include ${s}`);let t=await u(o);return y(e.replace(d,t))}else console.error(`Invalid embed path: ${o}`)}else console.error("Invalid embed!?")}return e},u=async e=>{if(!await c(e))throw new Error(`File not found: "${e}"`);console.log(`Reading ${e}`);let s=await w.readFile(e,{encoding:"utf-8"});return y(s)};F.get("/:domain.:tld.:ext(js|css)",(e,n)=>{(async()=>{let{domain:s,tld:o,ext:t}=e.params,[f,g]=[null,null],l=`${s}.${o}.${t}`;if(console.log(`Request for ${l}`),T.test([s,o,t].join("")))return n.status(404).json({error:"Bad Request"});let m=r.default.join(a,l);if(console.log(`Handling request for ${l}`),!c(m))return console.error(`Request for ${l} is 404`),n.status(404).json({error:`File not found: ${m}`});let p=[];if(p.push(await u(m)),f&&typeof f=="string"){let i=r.default.join(a,f);await c(i)&&p.unshift(await u(i))}if(g&&typeof g=="string"){let i=r.default.join(a,g);await c(i)&&p.push(await u(i))}let E=t==="js"?"application/javascript":"text/css";n.setHeader("Content-Type",E),n.send(p.join(`
`))})().catch(s=>{console.error("Error in async route handler:",s),n.status(500).json({error:"Internal Server Error"})})});F.listen(h,()=>{console.log(`Server is running on http://localhost:${h}`)});
